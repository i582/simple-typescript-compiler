-- Started compilation of the file "main.ts'
-- Started token splitting
Token separation done
Token: '{' Type: 'Lbra' Line: '1' Pos: '1'
Token: 'import' Type: 'Import' Line: '1' Pos: '8'
Token: '{' Type: 'Lbra' Line: '1' Pos: '9'
Token: 'bubbleSort' Type: 'Identifier' Line: '1' Pos: '21'
Token: ',' Type: 'Comma' Line: '1' Pos: '21'
Token: 'printArray' Type: 'Identifier' Line: '1' Pos: '33'
Token: ',' Type: 'Comma' Line: '1' Pos: '33'
Token: 'quickSort' Type: 'Identifier' Line: '1' Pos: '44'
Token: ',' Type: 'Comma' Line: '1' Pos: '44'
Token: 'print' Type: 'Identifier' Line: '1' Pos: '51'
Token: '}' Type: 'Rbra' Line: '1' Pos: '52'
Token: 'from' Type: 'From' Line: '1' Pos: '58'
Token: '"./sorts"' Type: 'String Constant' Line: '1' Pos: '59'
Token: ';' Type: 'Semicolon' Line: '1' Pos: '59'
Token: 'import' Type: 'Import' Line: '2' Pos: '8'
Token: '{' Type: 'Lbra' Line: '2' Pos: '9'
Token: 'factorial' Type: 'Identifier' Line: '2' Pos: '20'
Token: '}' Type: 'Rbra' Line: '2' Pos: '21'
Token: 'from' Type: 'From' Line: '2' Pos: '27'
Token: '"./factorial"' Type: 'String Constant' Line: '2' Pos: '28'
Token: ';' Type: 'Semicolon' Line: '2' Pos: '28'
Token: 'const' Type: 'Const' Line: '4' Pos: '7'
Token: 'size' Type: 'Identifier' Line: '4' Pos: '12'
Token: '=' Type: 'Assign' Line: '4' Pos: '13'
Token: '20' Type: 'Number Constant' Line: '4' Pos: '17'
Token: ';' Type: 'Semicolon' Line: '4' Pos: '17'
Token: 'let' Type: 'Let' Line: '5' Pos: '5'
Token: 'array' Type: 'Identifier' Line: '5' Pos: '11'
Token: ':' Type: 'Colon' Line: '5' Pos: '11'
Token: 'number' Type: 'Number' Line: '5' Pos: '19'
Token: '[' Type: 'Lsqr' Line: '5' Pos: '19'
Token: ']' Type: 'Rsqr' Line: '5' Pos: '20'
Token: '=' Type: 'Assign' Line: '5' Pos: '22'
Token: '[' Type: 'Lsqr' Line: '5' Pos: '24'
Token: '98' Type: 'Number Constant' Line: '5' Pos: '27'
Token: ',' Type: 'Comma' Line: '5' Pos: '27'
Token: '69' Type: 'Number Constant' Line: '5' Pos: '31'
Token: ',' Type: 'Comma' Line: '5' Pos: '31'
Token: '0' Type: 'Number Constant' Line: '5' Pos: '34'
Token: ',' Type: 'Comma' Line: '5' Pos: '34'
Token: '4' Type: 'Number Constant' Line: '5' Pos: '37'
Token: ',' Type: 'Comma' Line: '5' Pos: '37'
Token: '41' Type: 'Number Constant' Line: '5' Pos: '41'
Token: ',' Type: 'Comma' Line: '5' Pos: '41'
Token: '57' Type: 'Number Constant' Line: '5' Pos: '45'
Token: ',' Type: 'Comma' Line: '5' Pos: '45'
Token: '35' Type: 'Number Constant' Line: '5' Pos: '49'
Token: ',' Type: 'Comma' Line: '5' Pos: '49'
Token: '15' Type: 'Number Constant' Line: '5' Pos: '53'
Token: ',' Type: 'Comma' Line: '5' Pos: '53'
Token: '7' Type: 'Number Constant' Line: '5' Pos: '56'
Token: ',' Type: 'Comma' Line: '5' Pos: '56'
Token: '63' Type: 'Number Constant' Line: '5' Pos: '60'
Token: ',' Type: 'Comma' Line: '5' Pos: '60'
Token: '2' Type: 'Number Constant' Line: '5' Pos: '63'
Token: ',' Type: 'Comma' Line: '5' Pos: '63'
Token: '43' Type: 'Number Constant' Line: '5' Pos: '67'
Token: ',' Type: 'Comma' Line: '5' Pos: '67'
Token: '33' Type: 'Number Constant' Line: '5' Pos: '71'
Token: ',' Type: 'Comma' Line: '5' Pos: '71'
Token: '56' Type: 'Number Constant' Line: '5' Pos: '75'
Token: ',' Type: 'Comma' Line: '5' Pos: '75'
Token: '24' Type: 'Number Constant' Line: '5' Pos: '79'
Token: ',' Type: 'Comma' Line: '5' Pos: '79'
Token: '77' Type: 'Number Constant' Line: '5' Pos: '83'
Token: ',' Type: 'Comma' Line: '5' Pos: '83'
Token: '73' Type: 'Number Constant' Line: '5' Pos: '87'
Token: ',' Type: 'Comma' Line: '5' Pos: '87'
Token: '30' Type: 'Number Constant' Line: '5' Pos: '91'
Token: ',' Type: 'Comma' Line: '5' Pos: '91'
Token: '38' Type: 'Number Constant' Line: '5' Pos: '95'
Token: ',' Type: 'Comma' Line: '5' Pos: '95'
Token: '47' Type: 'Number Constant' Line: '5' Pos: '99'
Token: ']' Type: 'Rsqr' Line: '5' Pos: '99'
Token: ';' Type: 'Semicolon' Line: '5' Pos: '100'
Token: 'printArray' Type: 'Identifier' Line: '7' Pos: '12'
Token: '(' Type: 'Lpar' Line: '7' Pos: '12'
Token: 'array' Type: 'Identifier' Line: '7' Pos: '18'
Token: ',' Type: 'Comma' Line: '7' Pos: '18'
Token: 'size' Type: 'Identifier' Line: '7' Pos: '24'
Token: ')' Type: 'Rpar' Line: '7' Pos: '24'
Token: ';' Type: 'Semicolon' Line: '7' Pos: '25'
Token: 'quickSort' Type: 'Identifier' Line: '8' Pos: '11'
Token: '(' Type: 'Lpar' Line: '8' Pos: '11'
Token: 'array' Type: 'Identifier' Line: '8' Pos: '17'
Token: ',' Type: 'Comma' Line: '8' Pos: '17'
Token: '20' Type: 'Number Constant' Line: '8' Pos: '21'
Token: ')' Type: 'Rpar' Line: '8' Pos: '21'
Token: ';' Type: 'Semicolon' Line: '8' Pos: '22'
Token: 'printArray' Type: 'Identifier' Line: '9' Pos: '12'
Token: '(' Type: 'Lpar' Line: '9' Pos: '12'
Token: 'array' Type: 'Identifier' Line: '9' Pos: '18'
Token: ',' Type: 'Comma' Line: '9' Pos: '18'
Token: 'size' Type: 'Identifier' Line: '9' Pos: '24'
Token: ')' Type: 'Rpar' Line: '9' Pos: '24'
Token: ';' Type: 'Semicolon' Line: '9' Pos: '25'
Token: 'let' Type: 'Let' Line: '12' Pos: '5'
Token: 'b' Type: 'Identifier' Line: '12' Pos: '7'
Token: '=' Type: 'Assign' Line: '12' Pos: '8'
Token: 'size' Type: 'Identifier' Line: '12' Pos: '14'
Token: '+' Type: 'Plus' Line: '12' Pos: '15'
Token: '45' Type: 'Number Constant' Line: '12' Pos: '19'
Token: ';' Type: 'Semicolon' Line: '12' Pos: '19'
Token: 'print' Type: 'Identifier' Line: '14' Pos: '7'
Token: '(' Type: 'Lpar' Line: '14' Pos: '7'
Token: 'factorial' Type: 'Identifier' Line: '14' Pos: '17'
Token: '(' Type: 'Lpar' Line: '14' Pos: '17'
Token: '5' Type: 'Number Constant' Line: '14' Pos: '19'
Token: ')' Type: 'Rpar' Line: '14' Pos: '19'
Token: ')' Type: 'Rpar' Line: '14' Pos: '20'
Token: ';' Type: 'Semicolon' Line: '14' Pos: '21'
Token: '}' Type: 'Rbra' Line: '14' Pos: '22'
-- Started construction of the abstract syntax tree
-- Construction of the abstract syntax tree done
-- Started semantic correctness checks
-- Started import processing
-- Started compilation of the file "G:\Programming\stc\testPrograms\sorts.ts'
-- Started token splitting
Token separation done
Token: '{' Type: 'Lbra' Line: '1' Pos: '1'
Token: 'import' Type: 'Import' Line: '1' Pos: '8'
Token: '{' Type: 'Lbra' Line: '1' Pos: '9'
Token: 'print' Type: 'Identifier' Line: '1' Pos: '16'
Token: ',' Type: 'Comma' Line: '1' Pos: '16'
Token: 'println' Type: 'Identifier' Line: '1' Pos: '25'
Token: ',' Type: 'Comma' Line: '1' Pos: '25'
Token: 'input' Type: 'Identifier' Line: '1' Pos: '32'
Token: '}' Type: 'Rbra' Line: '1' Pos: '33'
Token: 'from' Type: 'From' Line: '1' Pos: '39'
Token: '"./lib/io"' Type: 'String Constant' Line: '1' Pos: '40'
Token: ';' Type: 'Semicolon' Line: '1' Pos: '40'
Token: 'function' Type: 'Function' Line: '8' Pos: '10'
Token: 'printArray' Type: 'Identifier' Line: '8' Pos: '21'
Token: '(' Type: 'Lpar' Line: '8' Pos: '21'
Token: 'array' Type: 'Identifier' Line: '8' Pos: '27'
Token: ':' Type: 'Colon' Line: '8' Pos: '27'
Token: 'number' Type: 'Number' Line: '8' Pos: '35'
Token: '[' Type: 'Lsqr' Line: '8' Pos: '35'
Token: ']' Type: 'Rsqr' Line: '8' Pos: '36'
Token: ',' Type: 'Comma' Line: '8' Pos: '37'
Token: 'size' Type: 'Identifier' Line: '8' Pos: '43'
Token: ':' Type: 'Colon' Line: '8' Pos: '43'
Token: 'number' Type: 'Number' Line: '8' Pos: '51'
Token: ')' Type: 'Rpar' Line: '8' Pos: '51'
Token: '{' Type: 'Lbra' Line: '9' Pos: '2'
Token: 'for' Type: 'For' Line: '10' Pos: '9'
Token: '(' Type: 'Lpar' Line: '10' Pos: '10'
Token: 'let' Type: 'Let' Line: '10' Pos: '14'
Token: 'i' Type: 'Identifier' Line: '10' Pos: '16'
Token: '=' Type: 'Assign' Line: '10' Pos: '17'
Token: '0' Type: 'Number Constant' Line: '10' Pos: '20'
Token: ';' Type: 'Semicolon' Line: '10' Pos: '20'
Token: 'i' Type: 'Identifier' Line: '10' Pos: '23'
Token: '<' Type: 'Less' Line: '10' Pos: '24'
Token: 'size' Type: 'Identifier' Line: '10' Pos: '30'
Token: ';' Type: 'Semicolon' Line: '10' Pos: '30'
Token: 'i' Type: 'Identifier' Line: '10' Pos: '33'
Token: '+=' Type: 'Add Assign' Line: '10' Pos: '34'
Token: '1' Type: 'Number Constant' Line: '10' Pos: '37'
Token: ')' Type: 'Rpar' Line: '10' Pos: '37'
Token: '{' Type: 'Lbra' Line: '11' Pos: '6'
Token: 'print' Type: 'Identifier' Line: '12' Pos: '15'
Token: '(' Type: 'Lpar' Line: '12' Pos: '15'
Token: 'array' Type: 'Identifier' Line: '12' Pos: '21'
Token: '[' Type: 'Lsqr' Line: '12' Pos: '21'
Token: 'i' Type: 'Identifier' Line: '12' Pos: '23'
Token: ']' Type: 'Rsqr' Line: '12' Pos: '23'
Token: ')' Type: 'Rpar' Line: '12' Pos: '24'
Token: ';' Type: 'Semicolon' Line: '12' Pos: '25'
Token: '}' Type: 'Rbra' Line: '13' Pos: '6'
Token: 'println' Type: 'Identifier' Line: '14' Pos: '13'
Token: '(' Type: 'Lpar' Line: '14' Pos: '13'
Token: '"\n"' Type: 'String Constant' Line: '14' Pos: '14'
Token: ')' Type: 'Rpar' Line: '14' Pos: '14'
Token: ';' Type: 'Semicolon' Line: '14' Pos: '15'
Token: '}' Type: 'Rbra' Line: '15' Pos: '2'
Token: 'function' Type: 'Function' Line: '17' Pos: '10'
Token: 'quickSort' Type: 'Identifier' Line: '17' Pos: '20'
Token: '(' Type: 'Lpar' Line: '17' Pos: '20'
Token: 'array' Type: 'Identifier' Line: '17' Pos: '26'
Token: ':' Type: 'Colon' Line: '17' Pos: '26'
Token: 'number' Type: 'Number' Line: '17' Pos: '34'
Token: '[' Type: 'Lsqr' Line: '17' Pos: '34'
Token: ']' Type: 'Rsqr' Line: '17' Pos: '35'
Token: ',' Type: 'Comma' Line: '17' Pos: '36'
Token: 'size' Type: 'Identifier' Line: '17' Pos: '42'
Token: ':' Type: 'Colon' Line: '17' Pos: '42'
Token: 'number' Type: 'Number' Line: '17' Pos: '50'
Token: ')' Type: 'Rpar' Line: '17' Pos: '50'
Token: '{' Type: 'Lbra' Line: '18' Pos: '2'
Token: 'quickSortHide' Type: 'Identifier' Line: '19' Pos: '19'
Token: '(' Type: 'Lpar' Line: '19' Pos: '19'
Token: 'array' Type: 'Identifier' Line: '19' Pos: '25'
Token: ',' Type: 'Comma' Line: '19' Pos: '25'
Token: '0' Type: 'Number Constant' Line: '19' Pos: '28'
Token: ',' Type: 'Comma' Line: '19' Pos: '28'
Token: 'size' Type: 'Identifier' Line: '19' Pos: '34'
Token: '-' Type: 'Minus' Line: '19' Pos: '35'
Token: '1' Type: 'Number Constant' Line: '19' Pos: '38'
Token: ')' Type: 'Rpar' Line: '19' Pos: '38'
Token: ';' Type: 'Semicolon' Line: '19' Pos: '39'
Token: '}' Type: 'Rbra' Line: '20' Pos: '2'
Token: 'function' Type: 'Function' Line: '22' Pos: '10'
Token: 'quickSortHide' Type: 'Identifier' Line: '22' Pos: '24'
Token: '(' Type: 'Lpar' Line: '22' Pos: '24'
Token: 'array' Type: 'Identifier' Line: '22' Pos: '30'
Token: ':' Type: 'Colon' Line: '22' Pos: '30'
Token: 'number' Type: 'Number' Line: '22' Pos: '38'
Token: '[' Type: 'Lsqr' Line: '22' Pos: '38'
Token: ']' Type: 'Rsqr' Line: '22' Pos: '39'
Token: ',' Type: 'Comma' Line: '22' Pos: '40'
Token: 'first' Type: 'Identifier' Line: '22' Pos: '47'
Token: ':' Type: 'Colon' Line: '22' Pos: '47'
Token: 'number' Type: 'Number' Line: '22' Pos: '55'
Token: ',' Type: 'Comma' Line: '22' Pos: '55'
Token: 'last' Type: 'Identifier' Line: '22' Pos: '61'
Token: ':' Type: 'Colon' Line: '22' Pos: '61'
Token: 'number' Type: 'Number' Line: '22' Pos: '69'
Token: ')' Type: 'Rpar' Line: '22' Pos: '69'
Token: '{' Type: 'Lbra' Line: '23' Pos: '2'
Token: 'if' Type: 'If' Line: '24' Pos: '8'
Token: '(' Type: 'Lpar' Line: '24' Pos: '9'
Token: 'first' Type: 'Identifier' Line: '24' Pos: '15'
Token: '<' Type: 'Less' Line: '24' Pos: '16'
Token: 'last' Type: 'Identifier' Line: '24' Pos: '22'
Token: ')' Type: 'Rpar' Line: '24' Pos: '22'
Token: '{' Type: 'Lbra' Line: '25' Pos: '6'
Token: 'let' Type: 'Let' Line: '26' Pos: '13'
Token: 'left' Type: 'Identifier' Line: '26' Pos: '18'
Token: '=' Type: 'Assign' Line: '26' Pos: '19'
Token: 'first' Type: 'Identifier' Line: '26' Pos: '26'
Token: ';' Type: 'Semicolon' Line: '26' Pos: '26'
Token: 'let' Type: 'Let' Line: '27' Pos: '13'
Token: 'right' Type: 'Identifier' Line: '27' Pos: '19'
Token: '=' Type: 'Assign' Line: '27' Pos: '20'
Token: 'last' Type: 'Identifier' Line: '27' Pos: '26'
Token: ';' Type: 'Semicolon' Line: '27' Pos: '26'
Token: 'let' Type: 'Let' Line: '28' Pos: '13'
Token: 'middle' Type: 'Identifier' Line: '28' Pos: '20'
Token: '=' Type: 'Assign' Line: '28' Pos: '21'
Token: 'array' Type: 'Identifier' Line: '28' Pos: '28'
Token: '[' Type: 'Lsqr' Line: '28' Pos: '28'
Token: '(' Type: 'Lpar' Line: '28' Pos: '29'
Token: 'left' Type: 'Identifier' Line: '28' Pos: '34'
Token: '+' Type: 'Plus' Line: '28' Pos: '35'
Token: 'right' Type: 'Identifier' Line: '28' Pos: '42'
Token: ')' Type: 'Rpar' Line: '28' Pos: '42'
Token: '/' Type: 'Slash' Line: '28' Pos: '44'
Token: '2' Type: 'Number Constant' Line: '28' Pos: '47'
Token: ']' Type: 'Rsqr' Line: '28' Pos: '47'
Token: ';' Type: 'Semicolon' Line: '28' Pos: '48'
Token: 'do' Type: 'Do While' Line: '31' Pos: '13'
Token: '{' Type: 'Lbra' Line: '32' Pos: '10'
Token: 'while' Type: 'While' Line: '33' Pos: '19'
Token: '(' Type: 'Lpar' Line: '33' Pos: '20'
Token: 'array' Type: 'Identifier' Line: '33' Pos: '26'
Token: '[' Type: 'Lsqr' Line: '33' Pos: '26'
Token: 'left' Type: 'Identifier' Line: '33' Pos: '31'
Token: ']' Type: 'Rsqr' Line: '33' Pos: '31'
Token: '<' Type: 'Less' Line: '33' Pos: '33'
Token: 'middle' Type: 'Identifier' Line: '33' Pos: '41'
Token: ')' Type: 'Rpar' Line: '33' Pos: '41'
Token: 'left' Type: 'Identifier' Line: '34' Pos: '22'
Token: '+=' Type: 'Add Assign' Line: '34' Pos: '23'
Token: '1' Type: 'Number Constant' Line: '34' Pos: '26'
Token: ';' Type: 'Semicolon' Line: '34' Pos: '26'
Token: 'while' Type: 'While' Line: '35' Pos: '19'
Token: '(' Type: 'Lpar' Line: '35' Pos: '20'
Token: 'array' Type: 'Identifier' Line: '35' Pos: '26'
Token: '[' Type: 'Lsqr' Line: '35' Pos: '26'
Token: 'right' Type: 'Identifier' Line: '35' Pos: '32'
Token: ']' Type: 'Rsqr' Line: '35' Pos: '32'
Token: '>' Type: 'Greater' Line: '35' Pos: '34'
Token: 'middle' Type: 'Identifier' Line: '35' Pos: '42'
Token: ')' Type: 'Rpar' Line: '35' Pos: '42'
Token: 'right' Type: 'Identifier' Line: '36' Pos: '23'
Token: '-=' Type: 'Sub Assign' Line: '36' Pos: '24'
Token: '1' Type: 'Number Constant' Line: '36' Pos: '27'
Token: ';' Type: 'Semicolon' Line: '36' Pos: '27'
Token: 'if' Type: 'If' Line: '39' Pos: '16'
Token: '(' Type: 'Lpar' Line: '39' Pos: '17'
Token: 'left' Type: 'Identifier' Line: '39' Pos: '22'
Token: '<=' Type: 'Less Equal' Line: '39' Pos: '23'
Token: 'right' Type: 'Identifier' Line: '39' Pos: '30'
Token: ')' Type: 'Rpar' Line: '39' Pos: '30'
Token: '{' Type: 'Lbra' Line: '40' Pos: '14'
Token: 'let' Type: 'Let' Line: '41' Pos: '21'
Token: 'tmp' Type: 'Identifier' Line: '41' Pos: '25'
Token: '=' Type: 'Assign' Line: '41' Pos: '26'
Token: 'array' Type: 'Identifier' Line: '41' Pos: '33'
Token: '[' Type: 'Lsqr' Line: '41' Pos: '33'
Token: 'left' Type: 'Identifier' Line: '41' Pos: '38'
Token: ']' Type: 'Rsqr' Line: '41' Pos: '38'
Token: ';' Type: 'Semicolon' Line: '41' Pos: '39'
Token: 'array' Type: 'Identifier' Line: '42' Pos: '23'
Token: '[' Type: 'Lsqr' Line: '42' Pos: '23'
Token: 'left' Type: 'Identifier' Line: '42' Pos: '28'
Token: ']' Type: 'Rsqr' Line: '42' Pos: '28'
Token: '=' Type: 'Assign' Line: '42' Pos: '30'
Token: 'array' Type: 'Identifier' Line: '42' Pos: '37'
Token: '[' Type: 'Lsqr' Line: '42' Pos: '37'
Token: 'right' Type: 'Identifier' Line: '42' Pos: '43'
Token: ']' Type: 'Rsqr' Line: '42' Pos: '43'
Token: ';' Type: 'Semicolon' Line: '42' Pos: '44'
Token: 'array' Type: 'Identifier' Line: '43' Pos: '23'
Token: '[' Type: 'Lsqr' Line: '43' Pos: '23'
Token: 'right' Type: 'Identifier' Line: '43' Pos: '29'
Token: ']' Type: 'Rsqr' Line: '43' Pos: '29'
Token: '=' Type: 'Assign' Line: '43' Pos: '31'
Token: 'tmp' Type: 'Identifier' Line: '43' Pos: '36'
Token: ';' Type: 'Semicolon' Line: '43' Pos: '36'
Token: 'left' Type: 'Identifier' Line: '45' Pos: '22'
Token: '+=' Type: 'Add Assign' Line: '45' Pos: '23'
Token: '1' Type: 'Number Constant' Line: '45' Pos: '26'
Token: ';' Type: 'Semicolon' Line: '45' Pos: '26'
Token: 'right' Type: 'Identifier' Line: '46' Pos: '23'
Token: '-=' Type: 'Sub Assign' Line: '46' Pos: '24'
Token: '1' Type: 'Number Constant' Line: '46' Pos: '27'
Token: ';' Type: 'Semicolon' Line: '46' Pos: '27'
Token: '}' Type: 'Rbra' Line: '47' Pos: '14'
Token: '}' Type: 'Rbra' Line: '49' Pos: '10'
Token: 'while' Type: 'While' Line: '49' Pos: '17'
Token: '(' Type: 'Lpar' Line: '49' Pos: '18'
Token: 'left' Type: 'Identifier' Line: '49' Pos: '23'
Token: '<=' Type: 'Less Equal' Line: '49' Pos: '24'
Token: 'right' Type: 'Identifier' Line: '49' Pos: '31'
Token: ')' Type: 'Rpar' Line: '49' Pos: '31'
Token: ';' Type: 'Semicolon' Line: '49' Pos: '32'
Token: 'quickSortHide' Type: 'Identifier' Line: '51' Pos: '23'
Token: '(' Type: 'Lpar' Line: '51' Pos: '23'
Token: 'array' Type: 'Identifier' Line: '51' Pos: '29'
Token: ',' Type: 'Comma' Line: '51' Pos: '29'
Token: 'first' Type: 'Identifier' Line: '51' Pos: '36'
Token: ',' Type: 'Comma' Line: '51' Pos: '36'
Token: 'right' Type: 'Identifier' Line: '51' Pos: '43'
Token: ')' Type: 'Rpar' Line: '51' Pos: '43'
Token: ';' Type: 'Semicolon' Line: '51' Pos: '44'
Token: 'quickSortHide' Type: 'Identifier' Line: '52' Pos: '23'
Token: '(' Type: 'Lpar' Line: '52' Pos: '23'
Token: 'array' Type: 'Identifier' Line: '52' Pos: '29'
Token: ',' Type: 'Comma' Line: '52' Pos: '29'
Token: 'left' Type: 'Identifier' Line: '52' Pos: '35'
Token: ',' Type: 'Comma' Line: '52' Pos: '35'
Token: 'last' Type: 'Identifier' Line: '52' Pos: '41'
Token: ')' Type: 'Rpar' Line: '52' Pos: '41'
Token: ';' Type: 'Semicolon' Line: '52' Pos: '42'
Token: '}' Type: 'Rbra' Line: '53' Pos: '6'
Token: '}' Type: 'Rbra' Line: '54' Pos: '2'
Token: 'function' Type: 'Function' Line: '57' Pos: '10'
Token: 'bubbleSort' Type: 'Identifier' Line: '57' Pos: '21'
Token: '(' Type: 'Lpar' Line: '57' Pos: '21'
Token: 'array' Type: 'Identifier' Line: '57' Pos: '27'
Token: ':' Type: 'Colon' Line: '57' Pos: '27'
Token: 'number' Type: 'Number' Line: '57' Pos: '35'
Token: '[' Type: 'Lsqr' Line: '57' Pos: '35'
Token: ']' Type: 'Rsqr' Line: '57' Pos: '36'
Token: ',' Type: 'Comma' Line: '57' Pos: '37'
Token: 'size' Type: 'Identifier' Line: '57' Pos: '43'
Token: ':' Type: 'Colon' Line: '57' Pos: '43'
Token: 'number' Type: 'Number' Line: '57' Pos: '51'
Token: ')' Type: 'Rpar' Line: '57' Pos: '51'
Token: '{' Type: 'Lbra' Line: '58' Pos: '2'
Token: 'for' Type: 'For' Line: '59' Pos: '9'
Token: '(' Type: 'Lpar' Line: '59' Pos: '10'
Token: 'let' Type: 'Let' Line: '59' Pos: '14'
Token: 'i' Type: 'Identifier' Line: '59' Pos: '16'
Token: '=' Type: 'Assign' Line: '59' Pos: '17'
Token: '1' Type: 'Number Constant' Line: '59' Pos: '20'
Token: ';' Type: 'Semicolon' Line: '59' Pos: '20'
Token: 'i' Type: 'Identifier' Line: '59' Pos: '23'
Token: '<' Type: 'Less' Line: '59' Pos: '24'
Token: 'size' Type: 'Identifier' Line: '59' Pos: '30'
Token: ';' Type: 'Semicolon' Line: '59' Pos: '30'
Token: 'i' Type: 'Identifier' Line: '59' Pos: '33'
Token: '+=' Type: 'Add Assign' Line: '59' Pos: '34'
Token: '1' Type: 'Number Constant' Line: '59' Pos: '37'
Token: ')' Type: 'Rpar' Line: '59' Pos: '37'
Token: '{' Type: 'Lbra' Line: '60' Pos: '6'
Token: 'for' Type: 'For' Line: '61' Pos: '13'
Token: '(' Type: 'Lpar' Line: '61' Pos: '14'
Token: 'let' Type: 'Let' Line: '61' Pos: '18'
Token: 'j' Type: 'Identifier' Line: '61' Pos: '20'
Token: '=' Type: 'Assign' Line: '61' Pos: '21'
Token: '0' Type: 'Number Constant' Line: '61' Pos: '24'
Token: ';' Type: 'Semicolon' Line: '61' Pos: '24'
Token: 'j' Type: 'Identifier' Line: '61' Pos: '27'
Token: '<' Type: 'Less' Line: '61' Pos: '28'
Token: 'size' Type: 'Identifier' Line: '61' Pos: '34'
Token: '-' Type: 'Minus' Line: '61' Pos: '35'
Token: 'i' Type: 'Identifier' Line: '61' Pos: '38'
Token: ';' Type: 'Semicolon' Line: '61' Pos: '38'
Token: 'j' Type: 'Identifier' Line: '61' Pos: '41'
Token: '+=' Type: 'Add Assign' Line: '61' Pos: '42'
Token: '1' Type: 'Number Constant' Line: '61' Pos: '45'
Token: ')' Type: 'Rpar' Line: '61' Pos: '45'
Token: '{' Type: 'Lbra' Line: '62' Pos: '10'
Token: 'if' Type: 'If' Line: '63' Pos: '16'
Token: '(' Type: 'Lpar' Line: '63' Pos: '17'
Token: 'array' Type: 'Identifier' Line: '63' Pos: '23'
Token: '[' Type: 'Lsqr' Line: '63' Pos: '23'
Token: 'j' Type: 'Identifier' Line: '63' Pos: '25'
Token: ']' Type: 'Rsqr' Line: '63' Pos: '25'
Token: '>' Type: 'Greater' Line: '63' Pos: '27'
Token: 'array' Type: 'Identifier' Line: '63' Pos: '34'
Token: '[' Type: 'Lsqr' Line: '63' Pos: '34'
Token: 'j' Type: 'Identifier' Line: '63' Pos: '36'
Token: '+' Type: 'Plus' Line: '63' Pos: '37'
Token: '1' Type: 'Number Constant' Line: '63' Pos: '40'
Token: ']' Type: 'Rsqr' Line: '63' Pos: '40'
Token: ')' Type: 'Rpar' Line: '63' Pos: '41'
Token: '{' Type: 'Lbra' Line: '64' Pos: '14'
Token: 'let' Type: 'Let' Line: '65' Pos: '21'
Token: 'temp' Type: 'Identifier' Line: '65' Pos: '26'
Token: '=' Type: 'Assign' Line: '65' Pos: '27'
Token: 'array' Type: 'Identifier' Line: '65' Pos: '34'
Token: '[' Type: 'Lsqr' Line: '65' Pos: '34'
Token: 'j' Type: 'Identifier' Line: '65' Pos: '36'
Token: ']' Type: 'Rsqr' Line: '65' Pos: '36'
Token: ';' Type: 'Semicolon' Line: '65' Pos: '37'
Token: 'array' Type: 'Identifier' Line: '66' Pos: '23'
Token: '[' Type: 'Lsqr' Line: '66' Pos: '23'
Token: 'j' Type: 'Identifier' Line: '66' Pos: '25'
Token: ']' Type: 'Rsqr' Line: '66' Pos: '25'
Token: '=' Type: 'Assign' Line: '66' Pos: '27'
Token: 'array' Type: 'Identifier' Line: '66' Pos: '34'
Token: '[' Type: 'Lsqr' Line: '66' Pos: '34'
Token: 'j' Type: 'Identifier' Line: '66' Pos: '36'
Token: '+' Type: 'Plus' Line: '66' Pos: '37'
Token: '1' Type: 'Number Constant' Line: '66' Pos: '40'
Token: ']' Type: 'Rsqr' Line: '66' Pos: '40'
Token: ';' Type: 'Semicolon' Line: '66' Pos: '41'
Token: 'array' Type: 'Identifier' Line: '67' Pos: '23'
Token: '[' Type: 'Lsqr' Line: '67' Pos: '23'
Token: 'j' Type: 'Identifier' Line: '67' Pos: '25'
Token: '+' Type: 'Plus' Line: '67' Pos: '26'
Token: '1' Type: 'Number Constant' Line: '67' Pos: '29'
Token: ']' Type: 'Rsqr' Line: '67' Pos: '29'
Token: '=' Type: 'Assign' Line: '67' Pos: '31'
Token: 'temp' Type: 'Identifier' Line: '67' Pos: '37'
Token: ';' Type: 'Semicolon' Line: '67' Pos: '37'
Token: '}' Type: 'Rbra' Line: '68' Pos: '14'
Token: '}' Type: 'Rbra' Line: '69' Pos: '10'
Token: '}' Type: 'Rbra' Line: '70' Pos: '6'
Token: '}' Type: 'Rbra' Line: '71' Pos: '2'
Token: 'export' Type: 'Export' Line: '74' Pos: '8'
Token: '{' Type: 'Lbra' Line: '74' Pos: '9'
Token: 'input' Type: 'Identifier' Line: '74' Pos: '16'
Token: ',' Type: 'Comma' Line: '74' Pos: '16'
Token: 'print' Type: 'Identifier' Line: '74' Pos: '23'
Token: ',' Type: 'Comma' Line: '74' Pos: '23'
Token: 'println' Type: 'Identifier' Line: '74' Pos: '32'
Token: '}' Type: 'Rbra' Line: '74' Pos: '33'
Token: ';' Type: 'Semicolon' Line: '74' Pos: '34'
Token: 'export' Type: 'Export' Line: '75' Pos: '8'
Token: '{' Type: 'Lbra' Line: '75' Pos: '9'
Token: 'printArray' Type: 'Identifier' Line: '75' Pos: '21'
Token: ',' Type: 'Comma' Line: '75' Pos: '21'
Token: 'quickSort' Type: 'Identifier' Line: '75' Pos: '32'
Token: ',' Type: 'Comma' Line: '75' Pos: '32'
Token: 'bubbleSort' Type: 'Identifier' Line: '75' Pos: '44'
Token: '}' Type: 'Rbra' Line: '75' Pos: '45'
Token: ';' Type: 'Semicolon' Line: '75' Pos: '46'
Token: '}' Type: 'Rbra' Line: '76' Pos: '2'
-- Started construction of the abstract syntax tree
-- Construction of the abstract syntax tree done
-- Started semantic correctness checks
-- Started import processing
-- Started compilation of the file "G:\Programming\stc\testPrograms\lib\io.ts'
-- Started token splitting
Token separation done
Token: '{' Type: 'Lbra' Line: '1' Pos: '1'
Token: 'declare' Type: 'Declare' Line: '5' Pos: '9'
Token: 'function' Type: 'Function' Line: '5' Pos: '18'
Token: 'print' Type: 'Identifier' Line: '5' Pos: '24'
Token: '(' Type: 'Lpar' Line: '5' Pos: '24'
Token: 'n' Type: 'Identifier' Line: '5' Pos: '26'
Token: ':' Type: 'Colon' Line: '5' Pos: '26'
Token: 'number' Type: 'Number' Line: '5' Pos: '34'
Token: ')' Type: 'Rpar' Line: '5' Pos: '34'
Token: ':' Type: 'Colon' Line: '5' Pos: '35'
Token: 'void' Type: 'Void' Line: '5' Pos: '41'
Token: ';' Type: 'Semicolon' Line: '5' Pos: '41'
Token: 'declare' Type: 'Declare' Line: '11' Pos: '9'
Token: 'function' Type: 'Function' Line: '11' Pos: '18'
Token: 'println' Type: 'Identifier' Line: '11' Pos: '26'
Token: '(' Type: 'Lpar' Line: '11' Pos: '26'
Token: 'n' Type: 'Identifier' Line: '11' Pos: '28'
Token: ':' Type: 'Colon' Line: '11' Pos: '28'
Token: 'string' Type: 'String' Line: '11' Pos: '36'
Token: ')' Type: 'Rpar' Line: '11' Pos: '36'
Token: ':' Type: 'Colon' Line: '11' Pos: '37'
Token: 'void' Type: 'Void' Line: '11' Pos: '43'
Token: ';' Type: 'Semicolon' Line: '11' Pos: '43'
Token: 'declare' Type: 'Declare' Line: '16' Pos: '9'
Token: 'function' Type: 'Function' Line: '16' Pos: '18'
Token: 'input' Type: 'Identifier' Line: '16' Pos: '24'
Token: '(' Type: 'Lpar' Line: '16' Pos: '24'
Token: ')' Type: 'Rpar' Line: '16' Pos: '25'
Token: ':' Type: 'Colon' Line: '16' Pos: '26'
Token: 'number' Type: 'Number' Line: '16' Pos: '34'
Token: ';' Type: 'Semicolon' Line: '16' Pos: '34'
Token: 'export' Type: 'Export' Line: '19' Pos: '8'
Token: '{' Type: 'Lbra' Line: '19' Pos: '9'
Token: 'print' Type: 'Identifier' Line: '19' Pos: '16'
Token: ',' Type: 'Comma' Line: '19' Pos: '16'
Token: 'println' Type: 'Identifier' Line: '19' Pos: '25'
Token: ',' Type: 'Comma' Line: '19' Pos: '25'
Token: 'input' Type: 'Identifier' Line: '19' Pos: '32'
Token: '}' Type: 'Rbra' Line: '19' Pos: '33'
Token: ';' Type: 'Semicolon' Line: '19' Pos: '34'
Token: '}' Type: 'Rbra' Line: '19' Pos: '35'
-- Started construction of the abstract syntax tree
-- Construction of the abstract syntax tree done
-- Started semantic correctness checks
-- Started import processing
-- Import processing done
-- Started analysis preparation
-- Analysis preparation done
-- Started constant verification
-- Constant verification done
-- Started array verification
-- Array verification done
-- Started functions call verification
-- Functions call verification done
-- Started expression verification
-- Expression verification done
-- Started export verification
-- Export verification done
-- Semantic correctness checks done
-- Started print AST
+-prog 
  +-stmt  (scope id: 1)
    +-seq 
      +-seq 
        +-seq 
          +-seq 
            +-seq 
              +-stmt  (scope id: 2)
                +-function impl 'print' 
                  +-function impl return type 'void'
                  +-function impl args 
                    +-function impl arg  (scope id: 2)
                      +-var type 'number'
                  +-stmt  (scope id: 4)
            +-stmt  (scope id: 5)
              +-function impl 'println' 
                +-function impl return type 'void'
                +-function impl args 
                  +-function impl arg  (scope id: 5)
                    +-var type 'string'
                +-stmt  (scope id: 7)
          +-stmt  (scope id: 8)
            +-function impl 'input' 
              +-function impl return type 'number'
              +-stmt  (scope id: 10)
        +-Export 
          +-Export List
            +-Export List Element 'input'
            +-Export List
              +-Export List Element 'println'
              +-Export List
                +-Export List Element 'print'
      +-expr 


-- Started print variable table
{
   { Variable name: 'n', Type: 'number', Scope ID: 2 }
   { Variable name: 'n', Type: 'string', Scope ID: 5 }
}
-- Started print function table
{
   Function name: 'print'. Return type: 'void'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'number', Scope ID: 2 }
      }
   }

   Function name: 'println'. Return type: 'void'. Arguments:(string)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'string', Scope ID: 5 }
      }
   }

   Function name: 'input'. Return type: 'number'. Arguments:(void)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (0 byte)
      {
         void
      }
   }

}
-- Started print import variable table
{
   empty
}
-- Started print import functions table
{
   empty
}
-- Import processing done
-- Started analysis preparation
-- Analysis preparation done
-- Started constant verification
-- Constant verification done
-- Started array verification
-- Array verification done
-- Started functions call verification
-- Functions call verification done
-- Started expression verification
-- Expression verification done
-- Started export verification
-- Export verification done
-- Semantic correctness checks done
-- Started print AST
+-prog 
  +-stmt  (scope id: 1)
    +-seq 
      +-seq 
        +-seq 
          +-seq 
            +-stmt  (scope id: 2)
              +-function impl 'input' 
                +-function impl return type 'number'
                +-stmt  (scope id: 4)
          +-stmt  (scope id: 5)
            +-function impl 'println' 
              +-function impl return type 'void'
              +-function impl args 
                +-function impl arg  (scope id: 5)
                  +-var type 'string'
              +-stmt  (scope id: 7)
        +-stmt  (scope id: 8)
          +-function impl 'print' 
            +-function impl return type 'void'
            +-function impl args 
              +-function impl arg  (scope id: 8)
                +-var type 'number'
            +-stmt  (scope id: 10)
      +-seq 
        +-seq 
          +-seq 
            +-seq 
              +-seq 
                +-seq 
                  +-seq 
                    +-seq 
                      +-seq 
                        +-seq 
                          +-Import 
                            +-Import List
                              +-Import List Element 'input'
                              +-Import List
                                +-Import List Element 'println'
                                +-Import List
                                  +-Import List Element 'print'
                            +-Import File Path '"./lib/io"'
                        +-expr 
                      +-stmt  (scope id: 11)
                        +-function impl 'printArray' 
                          +-function impl return type 'void'
                          +-function impl args 
                            +-function impl args 
                              +-function impl arg  (scope id: 11)
                                +-var type 'number[]'
                            +-function impl arg  (scope id: 11)
                              +-var type 'number'
                          +-stmt  (scope id: 13)
                            +-seq 
                              +-seq 
                                +-stmt  (scope id: 14)
                                  +-for 
                                    +-expr 
                                      +-set 
                                        +-new var 'i' (scope id: 14) (scope id: 14)
                                        +-number const 
                                    +-expr 
                                      +-less 
                                        +-use var 'i' (declared in scope: 14) (scope id: 14)
                                        +-use var 'size' (declared in scope: 11) (scope id: 11)
                                    +-expr 
                                      +-set 
                                        +-use var 'i' (declared in scope: 14) (scope id: 14)
                                        +-add 
                                          +-use var 'i' (declared in scope: 14) (scope id: 14)
                                          +-number const 
                                    +-stmt  (scope id: 16)
                                      +-stmt  (scope id: 17)
                                        +-seq 
                                          +-expr 
                                            +-function call 'print' 
                                              +-function args 
                                                +-index capture 
                                                  +-use var 'array' (declared in scope: 11) (scope id: 11)
                                                  +-expr 
                                                    +-use var 'i' (declared in scope: 14) (scope id: 14)
                              +-expr 
                                +-function call 'println' 
                                  +-function args 
                                    +-string const "\n"
                    +-stmt  (scope id: 18)
                      +-function impl 'quickSort' 
                        +-function impl return type 'void'
                        +-function impl args 
                          +-function impl args 
                            +-function impl arg  (scope id: 18)
                              +-var type 'number[]'
                          +-function impl arg  (scope id: 18)
                            +-var type 'number'
                        +-stmt  (scope id: 20)
                          +-seq 
                            +-expr 
                              +-function call 'quickSortHide' 
                                +-function args 
                                  +-sub 
                                    +-use var 'size' (declared in scope: 18) (scope id: 18)
                                    +-number const 
                                  +-function args 
                                    +-number const 
                                    +-function args 
                                      +-use var 'array' (declared in scope: 18) (scope id: 18)
                  +-stmt  (scope id: 21)
                    +-function impl 'quickSortHide' 
                      +-function impl return type 'void'
                      +-function impl args 
                        +-function impl args 
                          +-function impl args 
                            +-function impl arg  (scope id: 21)
                              +-var type 'number[]'
                          +-function impl arg  (scope id: 21)
                            +-var type 'number'
                        +-function impl arg  (scope id: 21)
                          +-var type 'number'
                      +-stmt  (scope id: 23)
                        +-seq 
                          +-if 
                            +-expr 
                              +-less 
                                +-use var 'first' (declared in scope: 21) (scope id: 21)
                                +-use var 'last' (declared in scope: 21) (scope id: 21)
                            +-stmt  (scope id: 25)
                              +-stmt  (scope id: 26)
                                +-seq 
                                  +-seq 
                                    +-seq 
                                      +-seq 
                                        +-seq 
                                          +-seq 
                                            +-seq 
                                              +-expr 
                                                +-set 
                                                  +-new var 'left' (scope id: 26) (scope id: 26)
                                                  +-use var 'first' (declared in scope: 21) (scope id: 21)
                                            +-expr 
                                              +-set 
                                                +-new var 'right' (scope id: 26) (scope id: 26)
                                                +-use var 'last' (declared in scope: 21) (scope id: 21)
                                          +-expr 
                                            +-set 
                                              +-new var 'middle' (scope id: 26) (scope id: 26)
                                              +-index capture 
                                                +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                +-expr 
                                                  +-div 
                                                    +-expr 
                                                      +-add 
                                                        +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                        +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                    +-number const 
                                        +-stmt  (scope id: 27)
                                          +-do (while) 
                                            +-expr 
                                              +-less equal 
                                                +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                +-use var 'right' (declared in scope: 26) (scope id: 26)
                                            +-stmt  (scope id: 29)
                                              +-stmt  (scope id: 30)
                                                +-seq 
                                                  +-seq 
                                                    +-seq 
                                                      +-stmt  (scope id: 31)
                                                        +-while 
                                                          +-expr 
                                                            +-less 
                                                              +-index capture 
                                                                +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                                +-expr 
                                                                  +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                              +-use var 'middle' (declared in scope: 26) (scope id: 26)
                                                          +-stmt  (scope id: 33)
                                                            +-expr 
                                                              +-set 
                                                                +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                +-add 
                                                                  +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                  +-number const 
                                                    +-stmt  (scope id: 34)
                                                      +-while 
                                                        +-expr 
                                                          +-greater 
                                                            +-index capture 
                                                              +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                              +-expr 
                                                                +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                            +-use var 'middle' (declared in scope: 26) (scope id: 26)
                                                        +-stmt  (scope id: 36)
                                                          +-expr 
                                                            +-set 
                                                              +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                              +-sub 
                                                                +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                                +-number const 
                                                  +-if 
                                                    +-expr 
                                                      +-less equal 
                                                        +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                        +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                    +-stmt  (scope id: 38)
                                                      +-stmt  (scope id: 39)
                                                        +-seq 
                                                          +-seq 
                                                            +-seq 
                                                              +-seq 
                                                                +-seq 
                                                                  +-expr 
                                                                    +-set 
                                                                      +-new var 'tmp' (scope id: 39) (scope id: 39)
                                                                      +-index capture 
                                                                        +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                                        +-expr 
                                                                          +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                +-expr 
                                                                  +-set 
                                                                    +-index capture 
                                                                      +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                                      +-expr 
                                                                        +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                    +-index capture 
                                                                      +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                                      +-expr 
                                                                        +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                              +-expr 
                                                                +-set 
                                                                  +-index capture 
                                                                    +-use var 'array' (declared in scope: 21) (scope id: 21)
                                                                    +-expr 
                                                                      +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                                  +-use var 'tmp' (declared in scope: 39) (scope id: 39)
                                                            +-expr 
                                                              +-set 
                                                                +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                +-add 
                                                                  +-use var 'left' (declared in scope: 26) (scope id: 26)
                                                                  +-number const 
                                                          +-expr 
                                                            +-set 
                                                              +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                              +-sub 
                                                                +-use var 'right' (declared in scope: 26) (scope id: 26)
                                                                +-number const 
                                      +-expr 
                                    +-expr 
                                      +-function call 'quickSortHide' 
                                        +-function args 
                                          +-use var 'right' (declared in scope: 26) (scope id: 26)
                                          +-function args 
                                            +-use var 'first' (declared in scope: 21) (scope id: 21)
                                            +-function args 
                                              +-use var 'array' (declared in scope: 21) (scope id: 21)
                                  +-expr 
                                    +-function call 'quickSortHide' 
                                      +-function args 
                                        +-use var 'last' (declared in scope: 21) (scope id: 21)
                                        +-function args 
                                          +-use var 'left' (declared in scope: 26) (scope id: 26)
                                          +-function args 
                                            +-use var 'array' (declared in scope: 21) (scope id: 21)
                +-stmt  (scope id: 40)
                  +-function impl 'bubbleSort' 
                    +-function impl return type 'void'
                    +-function impl args 
                      +-function impl args 
                        +-function impl arg  (scope id: 40)
                          +-var type 'number[]'
                      +-function impl arg  (scope id: 40)
                        +-var type 'number'
                    +-stmt  (scope id: 42)
                      +-seq 
                        +-stmt  (scope id: 43)
                          +-for 
                            +-expr 
                              +-set 
                                +-new var 'i' (scope id: 43) (scope id: 43)
                                +-number const 
                            +-expr 
                              +-less 
                                +-use var 'i' (declared in scope: 43) (scope id: 43)
                                +-use var 'size' (declared in scope: 40) (scope id: 40)
                            +-expr 
                              +-set 
                                +-use var 'i' (declared in scope: 43) (scope id: 43)
                                +-add 
                                  +-use var 'i' (declared in scope: 43) (scope id: 43)
                                  +-number const 
                            +-stmt  (scope id: 45)
                              +-stmt  (scope id: 46)
                                +-seq 
                                  +-stmt  (scope id: 47)
                                    +-for 
                                      +-expr 
                                        +-set 
                                          +-new var 'j' (scope id: 47) (scope id: 47)
                                          +-number const 
                                      +-expr 
                                        +-less 
                                          +-use var 'j' (declared in scope: 47) (scope id: 47)
                                          +-sub 
                                            +-use var 'size' (declared in scope: 40) (scope id: 40)
                                            +-use var 'i' (declared in scope: 43) (scope id: 43)
                                      +-expr 
                                        +-set 
                                          +-use var 'j' (declared in scope: 47) (scope id: 47)
                                          +-add 
                                            +-use var 'j' (declared in scope: 47) (scope id: 47)
                                            +-number const 
                                      +-stmt  (scope id: 49)
                                        +-stmt  (scope id: 50)
                                          +-seq 
                                            +-if 
                                              +-expr 
                                                +-greater 
                                                  +-index capture 
                                                    +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                    +-expr 
                                                      +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                  +-index capture 
                                                    +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                    +-expr 
                                                      +-add 
                                                        +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                        +-number const 
                                              +-stmt  (scope id: 52)
                                                +-stmt  (scope id: 53)
                                                  +-seq 
                                                    +-seq 
                                                      +-seq 
                                                        +-expr 
                                                          +-set 
                                                            +-new var 'temp' (scope id: 53) (scope id: 53)
                                                            +-index capture 
                                                              +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                              +-expr 
                                                                +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                      +-expr 
                                                        +-set 
                                                          +-index capture 
                                                            +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                            +-expr 
                                                              +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                          +-index capture 
                                                            +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                            +-expr 
                                                              +-add 
                                                                +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                                +-number const 
                                                    +-expr 
                                                      +-set 
                                                        +-index capture 
                                                          +-use var 'array' (declared in scope: 40) (scope id: 40)
                                                          +-expr 
                                                            +-add 
                                                              +-use var 'j' (declared in scope: 47) (scope id: 47)
                                                              +-number const 
                                                        +-use var 'temp' (declared in scope: 53) (scope id: 53)
              +-Export 
                +-Export List
                  +-Export List Element 'println'
                  +-Export List
                    +-Export List Element 'print'
                    +-Export List
                      +-Export List Element 'input'
            +-expr 
          +-Export 
            +-Export List
              +-Export List Element 'bubbleSort'
              +-Export List
                +-Export List Element 'quickSort'
                +-Export List
                  +-Export List Element 'printArray'
        +-expr 


-- Started print variable table
{
   { Variable name: 'n', Type: 'string', Scope ID: 5 }
   { Variable name: 'n', Type: 'number', Scope ID: 8 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 11 }
   { Variable name: 'size', Type: 'number', Scope ID: 11 }
   { Variable name: 'i', Type: 'number', Scope ID: 14 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 18 }
   { Variable name: 'size', Type: 'number', Scope ID: 18 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 21 }
   { Variable name: 'first', Type: 'number', Scope ID: 21 }
   { Variable name: 'last', Type: 'number', Scope ID: 21 }
   { Variable name: 'left', Type: 'number', Scope ID: 26 }
   { Variable name: 'right', Type: 'number', Scope ID: 26 }
   { Variable name: 'middle', Type: 'number', Scope ID: 26 }
   { Variable name: 'tmp', Type: 'number', Scope ID: 39 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 40 }
   { Variable name: 'size', Type: 'number', Scope ID: 40 }
   { Variable name: 'i', Type: 'number', Scope ID: 43 }
   { Variable name: 'j', Type: 'number', Scope ID: 47 }
   { Variable name: 'temp', Type: 'number', Scope ID: 53 }
}
-- Started print function table
{
   Function name: 'input'. Return type: 'number'. Arguments:(void)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (0 byte)
      {
         void
      }
   }

   Function name: 'println'. Return type: 'void'. Arguments:(string)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'string', Scope ID: 5 }
      }
   }

   Function name: 'print'. Return type: 'void'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'number', Scope ID: 8 }
      }
   }

   Function name: 'printArray'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (4 byte)
      {
         { Variable name: 'i', Type: 'number', Scope ID: 14 }
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 11 }
         { Variable name: 'size', Type: 'number', Scope ID: 11 }
      }
   }

   Function name: 'quickSort'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 18 }
         { Variable name: 'size', Type: 'number', Scope ID: 18 }
      }
   }

   Function name: 'quickSortHide'. Return type: 'void'. Arguments:(number[], number, number)
   {
      Local variables: (16 byte)
      {
         { Variable name: 'left', Type: 'number', Scope ID: 26 }
         { Variable name: 'right', Type: 'number', Scope ID: 26 }
         { Variable name: 'middle', Type: 'number', Scope ID: 26 }
         { Variable name: 'tmp', Type: 'number', Scope ID: 39 }
      }

      Argument variables: (12 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 21 }
         { Variable name: 'first', Type: 'number', Scope ID: 21 }
         { Variable name: 'last', Type: 'number', Scope ID: 21 }
      }
   }

   Function name: 'bubbleSort'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (12 byte)
      {
         { Variable name: 'i', Type: 'number', Scope ID: 43 }
         { Variable name: 'j', Type: 'number', Scope ID: 47 }
         { Variable name: 'temp', Type: 'number', Scope ID: 53 }
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 40 }
         { Variable name: 'size', Type: 'number', Scope ID: 40 }
      }
   }

}
-- Started print import variable table
{
   empty
}
-- Started print import functions table
{
   empty
}
-- Started compilation of the file "G:\Programming\stc\testPrograms\factorial.ts'
-- Started token splitting
Token separation done
Token: '{' Type: 'Lbra' Line: '1' Pos: '1'
Token: 'import' Type: 'Import' Line: '1' Pos: '8'
Token: '{' Type: 'Lbra' Line: '1' Pos: '9'
Token: 'print' Type: 'Identifier' Line: '1' Pos: '16'
Token: ',' Type: 'Comma' Line: '1' Pos: '16'
Token: 'println' Type: 'Identifier' Line: '1' Pos: '25'
Token: ',' Type: 'Comma' Line: '1' Pos: '25'
Token: 'input' Type: 'Identifier' Line: '1' Pos: '32'
Token: '}' Type: 'Rbra' Line: '1' Pos: '33'
Token: 'from' Type: 'From' Line: '1' Pos: '39'
Token: '"./lib/io"' Type: 'String Constant' Line: '1' Pos: '40'
Token: ';' Type: 'Semicolon' Line: '1' Pos: '40'
Token: 'function' Type: 'Function' Line: '7' Pos: '10'
Token: 'factorial' Type: 'Identifier' Line: '7' Pos: '20'
Token: '(' Type: 'Lpar' Line: '7' Pos: '20'
Token: 'a' Type: 'Identifier' Line: '7' Pos: '22'
Token: ':' Type: 'Colon' Line: '7' Pos: '22'
Token: 'number' Type: 'Number' Line: '7' Pos: '30'
Token: ')' Type: 'Rpar' Line: '7' Pos: '30'
Token: ':' Type: 'Colon' Line: '7' Pos: '31'
Token: 'number' Type: 'Number' Line: '8' Pos: '1'
Token: '{' Type: 'Lbra' Line: '8' Pos: '2'
Token: 'if' Type: 'If' Line: '9' Pos: '8'
Token: '(' Type: 'Lpar' Line: '9' Pos: '9'
Token: 'a' Type: 'Identifier' Line: '9' Pos: '11'
Token: '<' Type: 'Less' Line: '9' Pos: '12'
Token: '2' Type: 'Number Constant' Line: '9' Pos: '15'
Token: ')' Type: 'Rpar' Line: '9' Pos: '15'
Token: 'return' Type: 'Return' Line: '10' Pos: '16'
Token: '1' Type: 'Number Constant' Line: '10' Pos: '18'
Token: ';' Type: 'Semicolon' Line: '10' Pos: '18'
Token: 'return' Type: 'Return' Line: '12' Pos: '12'
Token: 'a' Type: 'Identifier' Line: '12' Pos: '14'
Token: '*' Type: 'Star' Line: '12' Pos: '15'
Token: 'factorial' Type: 'Identifier' Line: '12' Pos: '26'
Token: '(' Type: 'Lpar' Line: '12' Pos: '26'
Token: 'a' Type: 'Identifier' Line: '12' Pos: '28'
Token: '-' Type: 'Minus' Line: '12' Pos: '29'
Token: '1' Type: 'Number Constant' Line: '12' Pos: '32'
Token: ')' Type: 'Rpar' Line: '12' Pos: '32'
Token: ';' Type: 'Semicolon' Line: '12' Pos: '33'
Token: '}' Type: 'Rbra' Line: '13' Pos: '2'
Token: 'let' Type: 'Let' Line: '15' Pos: '5'
Token: 'num' Type: 'Identifier' Line: '15' Pos: '9'
Token: ':' Type: 'Colon' Line: '15' Pos: '9'
Token: 'number' Type: 'Number' Line: '15' Pos: '17'
Token: ';' Type: 'Semicolon' Line: '15' Pos: '17'
Token: 'do' Type: 'Do While' Line: '18' Pos: '1'
Token: '{' Type: 'Lbra' Line: '18' Pos: '2'
Token: 'println' Type: 'Identifier' Line: '19' Pos: '13'
Token: '(' Type: 'Lpar' Line: '19' Pos: '13'
Token: '"Enter number: "' Type: 'String Constant' Line: '19' Pos: '14'
Token: ')' Type: 'Rpar' Line: '19' Pos: '14'
Token: ';' Type: 'Semicolon' Line: '19' Pos: '15'
Token: 'num' Type: 'Identifier' Line: '20' Pos: '9'
Token: '=' Type: 'Assign' Line: '20' Pos: '10'
Token: 'input' Type: 'Identifier' Line: '20' Pos: '17'
Token: '(' Type: 'Lpar' Line: '20' Pos: '17'
Token: ')' Type: 'Rpar' Line: '20' Pos: '18'
Token: ';' Type: 'Semicolon' Line: '20' Pos: '19'
Token: 'if' Type: 'If' Line: '22' Pos: '8'
Token: '(' Type: 'Lpar' Line: '22' Pos: '9'
Token: 'num' Type: 'Identifier' Line: '22' Pos: '13'
Token: '>' Type: 'Greater' Line: '22' Pos: '14'
Token: '10' Type: 'Number Constant' Line: '22' Pos: '18'
Token: ')' Type: 'Rpar' Line: '22' Pos: '18'
Token: '{' Type: 'Lbra' Line: '23' Pos: '6'
Token: 'println' Type: 'Identifier' Line: '24' Pos: '17'
Token: '(' Type: 'Lpar' Line: '24' Pos: '17'
Token: '"Enter number less 11!\n"' Type: 'String Constant' Line: '24' Pos: '18'
Token: ')' Type: 'Rpar' Line: '24' Pos: '18'
Token: ';' Type: 'Semicolon' Line: '24' Pos: '19'
Token: '}' Type: 'Rbra' Line: '25' Pos: '6'
Token: 'else' Type: 'Else' Line: '27' Pos: '2'
Token: '{' Type: 'Lbra' Line: '27' Pos: '6'
Token: 'println' Type: 'Identifier' Line: '28' Pos: '17'
Token: '(' Type: 'Lpar' Line: '28' Pos: '17'
Token: '"Result: "' Type: 'String Constant' Line: '28' Pos: '18'
Token: ')' Type: 'Rpar' Line: '28' Pos: '18'
Token: ';' Type: 'Semicolon' Line: '28' Pos: '19'
Token: 'print' Type: 'Identifier' Line: '29' Pos: '15'
Token: '(' Type: 'Lpar' Line: '29' Pos: '15'
Token: 'factorial' Type: 'Identifier' Line: '29' Pos: '25'
Token: '(' Type: 'Lpar' Line: '29' Pos: '25'
Token: 'num' Type: 'Identifier' Line: '29' Pos: '29'
Token: ')' Type: 'Rpar' Line: '29' Pos: '29'
Token: ')' Type: 'Rpar' Line: '29' Pos: '30'
Token: ';' Type: 'Semicolon' Line: '29' Pos: '31'
Token: 'break' Type: 'Break' Line: '30' Pos: '15'
Token: ';' Type: 'Semicolon' Line: '30' Pos: '15'
Token: '}' Type: 'Rbra' Line: '31' Pos: '6'
Token: '}' Type: 'Rbra' Line: '32' Pos: '2'
Token: 'while' Type: 'While' Line: '32' Pos: '9'
Token: '(' Type: 'Lpar' Line: '32' Pos: '10'
Token: 'num' Type: 'Identifier' Line: '32' Pos: '14'
Token: '>' Type: 'Greater' Line: '32' Pos: '15'
Token: '10' Type: 'Number Constant' Line: '32' Pos: '19'
Token: ')' Type: 'Rpar' Line: '32' Pos: '19'
Token: ';' Type: 'Semicolon' Line: '32' Pos: '20'
Token: 'export' Type: 'Export' Line: '35' Pos: '8'
Token: '{' Type: 'Lbra' Line: '35' Pos: '9'
Token: 'factorial' Type: 'Identifier' Line: '35' Pos: '19'
Token: '}' Type: 'Rbra' Line: '35' Pos: '19'
Token: ';' Type: 'Semicolon' Line: '35' Pos: '20'
Token: '}' Type: 'Rbra' Line: '35' Pos: '21'
-- Started construction of the abstract syntax tree
-- Construction of the abstract syntax tree done
-- Started semantic correctness checks
-- Started import processing
-- Started compilation of the file "G:\Programming\stc\testPrograms\lib\io.ts'
-- Started token splitting
Token separation done
Token: '{' Type: 'Lbra' Line: '1' Pos: '1'
Token: 'declare' Type: 'Declare' Line: '5' Pos: '9'
Token: 'function' Type: 'Function' Line: '5' Pos: '18'
Token: 'print' Type: 'Identifier' Line: '5' Pos: '24'
Token: '(' Type: 'Lpar' Line: '5' Pos: '24'
Token: 'n' Type: 'Identifier' Line: '5' Pos: '26'
Token: ':' Type: 'Colon' Line: '5' Pos: '26'
Token: 'number' Type: 'Number' Line: '5' Pos: '34'
Token: ')' Type: 'Rpar' Line: '5' Pos: '34'
Token: ':' Type: 'Colon' Line: '5' Pos: '35'
Token: 'void' Type: 'Void' Line: '5' Pos: '41'
Token: ';' Type: 'Semicolon' Line: '5' Pos: '41'
Token: 'declare' Type: 'Declare' Line: '11' Pos: '9'
Token: 'function' Type: 'Function' Line: '11' Pos: '18'
Token: 'println' Type: 'Identifier' Line: '11' Pos: '26'
Token: '(' Type: 'Lpar' Line: '11' Pos: '26'
Token: 'n' Type: 'Identifier' Line: '11' Pos: '28'
Token: ':' Type: 'Colon' Line: '11' Pos: '28'
Token: 'string' Type: 'String' Line: '11' Pos: '36'
Token: ')' Type: 'Rpar' Line: '11' Pos: '36'
Token: ':' Type: 'Colon' Line: '11' Pos: '37'
Token: 'void' Type: 'Void' Line: '11' Pos: '43'
Token: ';' Type: 'Semicolon' Line: '11' Pos: '43'
Token: 'declare' Type: 'Declare' Line: '16' Pos: '9'
Token: 'function' Type: 'Function' Line: '16' Pos: '18'
Token: 'input' Type: 'Identifier' Line: '16' Pos: '24'
Token: '(' Type: 'Lpar' Line: '16' Pos: '24'
Token: ')' Type: 'Rpar' Line: '16' Pos: '25'
Token: ':' Type: 'Colon' Line: '16' Pos: '26'
Token: 'number' Type: 'Number' Line: '16' Pos: '34'
Token: ';' Type: 'Semicolon' Line: '16' Pos: '34'
Token: 'export' Type: 'Export' Line: '19' Pos: '8'
Token: '{' Type: 'Lbra' Line: '19' Pos: '9'
Token: 'print' Type: 'Identifier' Line: '19' Pos: '16'
Token: ',' Type: 'Comma' Line: '19' Pos: '16'
Token: 'println' Type: 'Identifier' Line: '19' Pos: '25'
Token: ',' Type: 'Comma' Line: '19' Pos: '25'
Token: 'input' Type: 'Identifier' Line: '19' Pos: '32'
Token: '}' Type: 'Rbra' Line: '19' Pos: '33'
Token: ';' Type: 'Semicolon' Line: '19' Pos: '34'
Token: '}' Type: 'Rbra' Line: '19' Pos: '35'
-- Started construction of the abstract syntax tree
-- Construction of the abstract syntax tree done
-- Started semantic correctness checks
-- Started import processing
-- Import processing done
-- Started analysis preparation
-- Analysis preparation done
-- Started constant verification
-- Constant verification done
-- Started array verification
-- Array verification done
-- Started functions call verification
-- Functions call verification done
-- Started expression verification
-- Expression verification done
-- Started export verification
-- Export verification done
-- Semantic correctness checks done
-- Started print AST
+-prog 
  +-stmt  (scope id: 1)
    +-seq 
      +-seq 
        +-seq 
          +-seq 
            +-seq 
              +-stmt  (scope id: 2)
                +-function impl 'print' 
                  +-function impl return type 'void'
                  +-function impl args 
                    +-function impl arg  (scope id: 2)
                      +-var type 'number'
                  +-stmt  (scope id: 4)
            +-stmt  (scope id: 5)
              +-function impl 'println' 
                +-function impl return type 'void'
                +-function impl args 
                  +-function impl arg  (scope id: 5)
                    +-var type 'string'
                +-stmt  (scope id: 7)
          +-stmt  (scope id: 8)
            +-function impl 'input' 
              +-function impl return type 'number'
              +-stmt  (scope id: 10)
        +-Export 
          +-Export List
            +-Export List Element 'input'
            +-Export List
              +-Export List Element 'println'
              +-Export List
                +-Export List Element 'print'
      +-expr 


-- Started print variable table
{
   { Variable name: 'n', Type: 'number', Scope ID: 2 }
   { Variable name: 'n', Type: 'string', Scope ID: 5 }
}
-- Started print function table
{
   Function name: 'print'. Return type: 'void'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'number', Scope ID: 2 }
      }
   }

   Function name: 'println'. Return type: 'void'. Arguments:(string)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'string', Scope ID: 5 }
      }
   }

   Function name: 'input'. Return type: 'number'. Arguments:(void)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (0 byte)
      {
         void
      }
   }

}
-- Started print import variable table
{
   empty
}
-- Started print import functions table
{
   empty
}
-- Import processing done
-- Started analysis preparation
-- Analysis preparation done
-- Started constant verification
-- Constant verification done
-- Started array verification
-- Array verification done
-- Started functions call verification
-- Functions call verification done
-- Started expression verification
-- Expression verification done
-- Started export verification
-- Export verification done
-- Semantic correctness checks done
-- Started print AST
+-prog 
  +-stmt  (scope id: 1)
    +-seq 
      +-seq 
        +-seq 
          +-seq 
            +-stmt  (scope id: 2)
              +-function impl 'input' 
                +-function impl return type 'number'
                +-stmt  (scope id: 4)
          +-stmt  (scope id: 5)
            +-function impl 'println' 
              +-function impl return type 'void'
              +-function impl args 
                +-function impl arg  (scope id: 5)
                  +-var type 'string'
              +-stmt  (scope id: 7)
        +-stmt  (scope id: 8)
          +-function impl 'print' 
            +-function impl return type 'void'
            +-function impl args 
              +-function impl arg  (scope id: 8)
                +-var type 'number'
            +-stmt  (scope id: 10)
      +-seq 
        +-seq 
          +-seq 
            +-seq 
              +-seq 
                +-seq 
                  +-seq 
                    +-seq 
                      +-Import 
                        +-Import List
                          +-Import List Element 'input'
                          +-Import List
                            +-Import List Element 'println'
                            +-Import List
                              +-Import List Element 'print'
                        +-Import File Path '"./lib/io"'
                    +-expr 
                  +-stmt  (scope id: 11)
                    +-function impl 'factorial' 
                      +-function impl return type 'number'
                      +-function impl args 
                        +-function impl arg  (scope id: 11)
                          +-var type 'number'
                      +-stmt  (scope id: 13)
                        +-seq 
                          +-seq 
                            +-if 
                              +-expr 
                                +-less 
                                  +-use var 'a' (declared in scope: 11) (scope id: 11)
                                  +-number const 
                              +-stmt  (scope id: 15)
                                +-return  (scope id: 11)
                                  +-expr 
                                    +-number const 
                          +-return  (scope id: 11)
                            +-expr 
                              +-mul 
                                +-use var 'a' (declared in scope: 11) (scope id: 11)
                                +-function call 'factorial' 
                                  +-function args 
                                    +-sub 
                                      +-use var 'a' (declared in scope: 11) (scope id: 11)
                                      +-number const 
                +-expr 
                  +-new var 'num' (scope id: 1) (scope id: 1)
                    +-var type 'number'
              +-stmt  (scope id: 16)
                +-do (while) 
                  +-expr 
                    +-greater 
                      +-use var 'num' (declared in scope: 1) (scope id: 1)
                      +-number const 
                  +-stmt  (scope id: 18)
                    +-stmt  (scope id: 19)
                      +-seq 
                        +-seq 
                          +-seq 
                            +-expr 
                              +-function call 'println' 
                                +-function args 
                                  +-string const "Enter number: "
                          +-expr 
                            +-set 
                              +-use var 'num' (declared in scope: 1) (scope id: 1)
                              +-function call 'input' 
                        +-if else 
                          +-expr 
                            +-greater 
                              +-use var 'num' (declared in scope: 1) (scope id: 1)
                              +-number const 
                          +-stmt  (scope id: 21)
                            +-stmt  (scope id: 22)
                              +-seq 
                                +-expr 
                                  +-function call 'println' 
                                    +-function args 
                                      +-string const "Enter number less 11!\n"
                          +-stmt  (scope id: 23)
                            +-seq 
                              +-seq 
                                +-seq 
                                  +-expr 
                                    +-function call 'println' 
                                      +-function args 
                                        +-string const "Result: "
                                +-expr 
                                  +-function call 'print' 
                                    +-function args 
                                      +-function call 'factorial' 
                                        +-function args 
                                          +-use var 'num' (declared in scope: 1) (scope id: 1)
                              +-break 
            +-expr 
          +-Export 
            +-Export List
              +-Export List Element 'factorial'
        +-expr 


-- Started print variable table
{
   { Variable name: 'num', Type: 'number', Scope ID: 1 }
   { Variable name: 'n', Type: 'string', Scope ID: 5 }
   { Variable name: 'n', Type: 'number', Scope ID: 8 }
   { Variable name: 'a', Type: 'number', Scope ID: 11 }
}
-- Started print function table
{
   Function name: 'input'. Return type: 'number'. Arguments:(void)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (0 byte)
      {
         void
      }
   }

   Function name: 'println'. Return type: 'void'. Arguments:(string)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'string', Scope ID: 5 }
      }
   }

   Function name: 'print'. Return type: 'void'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'number', Scope ID: 8 }
      }
   }

   Function name: 'factorial'. Return type: 'number'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'a', Type: 'number', Scope ID: 11 }
      }
   }

}
-- Started print import variable table
{
   empty
}
-- Started print import functions table
{
   empty
}
-- Import processing done
-- Started analysis preparation
-- Analysis preparation done
-- Started constant verification
-- Constant verification done
-- Started array verification
-- Array verification done
-- Started functions call verification
-- Functions call verification done
-- Started expression verification
-- Expression verification done
-- Started export verification
-- Export verification done
-- Semantic correctness checks done
-- Started print AST
+-prog 
  +-stmt  (scope id: 1)
    +-seq 
      +-seq 
        +-stmt  (scope id: 2)
          +-function impl 'factorial' 
            +-function impl return type 'number'
            +-function impl args 
              +-function impl arg  (scope id: 2)
                +-var type 'number'
            +-stmt  (scope id: 4)
              +-seq 
                +-seq 
                  +-if 
                    +-expr 
                      +-less 
                        +-use var 'a' (declared in scope: 2) (scope id: 2)
                        +-number const 
                    +-stmt  (scope id: 6)
                      +-return  (scope id: 2)
                        +-expr 
                          +-number const 
                +-return  (scope id: 2)
                  +-expr 
                    +-mul 
                      +-use var 'a' (declared in scope: 2) (scope id: 2)
                      +-function call 'factorial' 
                        +-function args 
                          +-sub 
                            +-use var 'a' (declared in scope: 2) (scope id: 2)
                            +-number const 
      +-seq 
        +-seq 
          +-seq 
            +-seq 
              +-seq 
                +-seq 
                  +-seq 
                    +-stmt  (scope id: 7)
                      +-function impl 'print' 
                        +-function impl return type 'void'
                        +-function impl args 
                          +-function impl arg  (scope id: 7)
                            +-var type 'number'
                        +-stmt  (scope id: 9)
                  +-stmt  (scope id: 10)
                    +-function impl 'quickSort' 
                      +-function impl return type 'void'
                      +-function impl args 
                        +-function impl args 
                          +-function impl arg  (scope id: 10)
                            +-var type 'number[]'
                        +-function impl arg  (scope id: 10)
                          +-var type 'number'
                      +-stmt  (scope id: 12)
                        +-seq 
                          +-expr 
                            +-function call 'quickSortHide' 
                              +-function args 
                                +-sub 
                                  +-use var 'size' (declared in scope: 10) (scope id: 10)
                                  +-number const 
                                +-function args 
                                  +-number const 
                                  +-function args 
                                    +-use var 'array' (declared in scope: 10) (scope id: 10)
                +-stmt  (scope id: 13)
                  +-function impl 'quickSortHide' 
                    +-function impl return type 'void'
                    +-function impl args 
                      +-function impl args 
                        +-function impl args 
                          +-function impl arg  (scope id: 13)
                            +-var type 'number[]'
                        +-function impl arg  (scope id: 13)
                          +-var type 'number'
                      +-function impl arg  (scope id: 13)
                        +-var type 'number'
                    +-stmt  (scope id: 15)
                      +-seq 
                        +-if 
                          +-expr 
                            +-less 
                              +-use var 'first' (declared in scope: 13) (scope id: 13)
                              +-use var 'last' (declared in scope: 13) (scope id: 13)
                          +-stmt  (scope id: 17)
                            +-stmt  (scope id: 18)
                              +-seq 
                                +-seq 
                                  +-seq 
                                    +-seq 
                                      +-seq 
                                        +-seq 
                                          +-seq 
                                            +-expr 
                                              +-set 
                                                +-new var 'left' (scope id: 18) (scope id: 18)
                                                +-use var 'first' (declared in scope: 13) (scope id: 13)
                                          +-expr 
                                            +-set 
                                              +-new var 'right' (scope id: 18) (scope id: 18)
                                              +-use var 'last' (declared in scope: 13) (scope id: 13)
                                        +-expr 
                                          +-set 
                                            +-new var 'middle' (scope id: 18) (scope id: 18)
                                            +-index capture 
                                              +-use var 'array' (declared in scope: 13) (scope id: 13)
                                              +-expr 
                                                +-div 
                                                  +-expr 
                                                    +-add 
                                                      +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                      +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                  +-number const 
                                      +-stmt  (scope id: 19)
                                        +-do (while) 
                                          +-expr 
                                            +-less equal 
                                              +-use var 'left' (declared in scope: 18) (scope id: 18)
                                              +-use var 'right' (declared in scope: 18) (scope id: 18)
                                          +-stmt  (scope id: 21)
                                            +-stmt  (scope id: 22)
                                              +-seq 
                                                +-seq 
                                                  +-seq 
                                                    +-stmt  (scope id: 23)
                                                      +-while 
                                                        +-expr 
                                                          +-less 
                                                            +-index capture 
                                                              +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                              +-expr 
                                                                +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                            +-use var 'middle' (declared in scope: 18) (scope id: 18)
                                                        +-stmt  (scope id: 25)
                                                          +-expr 
                                                            +-set 
                                                              +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                              +-add 
                                                                +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                                +-number const 
                                                  +-stmt  (scope id: 26)
                                                    +-while 
                                                      +-expr 
                                                        +-greater 
                                                          +-index capture 
                                                            +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                            +-expr 
                                                              +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                          +-use var 'middle' (declared in scope: 18) (scope id: 18)
                                                      +-stmt  (scope id: 28)
                                                        +-expr 
                                                          +-set 
                                                            +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                            +-sub 
                                                              +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                              +-number const 
                                                +-if 
                                                  +-expr 
                                                    +-less equal 
                                                      +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                      +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                  +-stmt  (scope id: 30)
                                                    +-stmt  (scope id: 31)
                                                      +-seq 
                                                        +-seq 
                                                          +-seq 
                                                            +-seq 
                                                              +-seq 
                                                                +-expr 
                                                                  +-set 
                                                                    +-new var 'tmp' (scope id: 31) (scope id: 31)
                                                                    +-index capture 
                                                                      +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                                      +-expr 
                                                                        +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                              +-expr 
                                                                +-set 
                                                                  +-index capture 
                                                                    +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                                    +-expr 
                                                                      +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                                  +-index capture 
                                                                    +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                                    +-expr 
                                                                      +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                            +-expr 
                                                              +-set 
                                                                +-index capture 
                                                                  +-use var 'array' (declared in scope: 13) (scope id: 13)
                                                                  +-expr 
                                                                    +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                                +-use var 'tmp' (declared in scope: 31) (scope id: 31)
                                                          +-expr 
                                                            +-set 
                                                              +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                              +-add 
                                                                +-use var 'left' (declared in scope: 18) (scope id: 18)
                                                                +-number const 
                                                        +-expr 
                                                          +-set 
                                                            +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                            +-sub 
                                                              +-use var 'right' (declared in scope: 18) (scope id: 18)
                                                              +-number const 
                                    +-expr 
                                  +-expr 
                                    +-function call 'quickSortHide' 
                                      +-function args 
                                        +-use var 'right' (declared in scope: 18) (scope id: 18)
                                        +-function args 
                                          +-use var 'first' (declared in scope: 13) (scope id: 13)
                                          +-function args 
                                            +-use var 'array' (declared in scope: 13) (scope id: 13)
                                +-expr 
                                  +-function call 'quickSortHide' 
                                    +-function args 
                                      +-use var 'last' (declared in scope: 13) (scope id: 13)
                                      +-function args 
                                        +-use var 'left' (declared in scope: 18) (scope id: 18)
                                        +-function args 
                                          +-use var 'array' (declared in scope: 13) (scope id: 13)
              +-stmt  (scope id: 32)
                +-function impl 'printArray' 
                  +-function impl return type 'void'
                  +-function impl args 
                    +-function impl args 
                      +-function impl arg  (scope id: 32)
                        +-var type 'number[]'
                    +-function impl arg  (scope id: 32)
                      +-var type 'number'
                  +-stmt  (scope id: 34)
                    +-seq 
                      +-seq 
                        +-stmt  (scope id: 35)
                          +-for 
                            +-expr 
                              +-set 
                                +-new var 'i' (scope id: 35) (scope id: 35)
                                +-number const 
                            +-expr 
                              +-less 
                                +-use var 'i' (declared in scope: 35) (scope id: 35)
                                +-use var 'size' (declared in scope: 32) (scope id: 32)
                            +-expr 
                              +-set 
                                +-use var 'i' (declared in scope: 35) (scope id: 35)
                                +-add 
                                  +-use var 'i' (declared in scope: 35) (scope id: 35)
                                  +-number const 
                            +-stmt  (scope id: 37)
                              +-stmt  (scope id: 38)
                                +-seq 
                                  +-expr 
                                    +-function call 'print' 
                                      +-function args 
                                        +-index capture 
                                          +-use var 'array' (declared in scope: 32) (scope id: 32)
                                          +-expr 
                                            +-use var 'i' (declared in scope: 35) (scope id: 35)
                      +-expr 
                        +-function call 'println' 
                          +-function args 
                            +-string const "\n"
            +-stmt  (scope id: 39)
              +-function impl 'println' 
                +-function impl return type 'void'
                +-function impl args 
                  +-function impl arg  (scope id: 39)
                    +-var type 'string'
                +-stmt  (scope id: 41)
          +-stmt  (scope id: 42)
            +-function impl 'bubbleSort' 
              +-function impl return type 'void'
              +-function impl args 
                +-function impl args 
                  +-function impl arg  (scope id: 42)
                    +-var type 'number[]'
                +-function impl arg  (scope id: 42)
                  +-var type 'number'
              +-stmt  (scope id: 44)
                +-seq 
                  +-stmt  (scope id: 45)
                    +-for 
                      +-expr 
                        +-set 
                          +-new var 'i' (scope id: 45) (scope id: 45)
                          +-number const 
                      +-expr 
                        +-less 
                          +-use var 'i' (declared in scope: 45) (scope id: 45)
                          +-use var 'size' (declared in scope: 42) (scope id: 42)
                      +-expr 
                        +-set 
                          +-use var 'i' (declared in scope: 45) (scope id: 45)
                          +-add 
                            +-use var 'i' (declared in scope: 45) (scope id: 45)
                            +-number const 
                      +-stmt  (scope id: 47)
                        +-stmt  (scope id: 48)
                          +-seq 
                            +-stmt  (scope id: 49)
                              +-for 
                                +-expr 
                                  +-set 
                                    +-new var 'j' (scope id: 49) (scope id: 49)
                                    +-number const 
                                +-expr 
                                  +-less 
                                    +-use var 'j' (declared in scope: 49) (scope id: 49)
                                    +-sub 
                                      +-use var 'size' (declared in scope: 42) (scope id: 42)
                                      +-use var 'i' (declared in scope: 45) (scope id: 45)
                                +-expr 
                                  +-set 
                                    +-use var 'j' (declared in scope: 49) (scope id: 49)
                                    +-add 
                                      +-use var 'j' (declared in scope: 49) (scope id: 49)
                                      +-number const 
                                +-stmt  (scope id: 51)
                                  +-stmt  (scope id: 52)
                                    +-seq 
                                      +-if 
                                        +-expr 
                                          +-greater 
                                            +-index capture 
                                              +-use var 'array' (declared in scope: 42) (scope id: 42)
                                              +-expr 
                                                +-use var 'j' (declared in scope: 49) (scope id: 49)
                                            +-index capture 
                                              +-use var 'array' (declared in scope: 42) (scope id: 42)
                                              +-expr 
                                                +-add 
                                                  +-use var 'j' (declared in scope: 49) (scope id: 49)
                                                  +-number const 
                                        +-stmt  (scope id: 54)
                                          +-stmt  (scope id: 55)
                                            +-seq 
                                              +-seq 
                                                +-seq 
                                                  +-expr 
                                                    +-set 
                                                      +-new var 'temp' (scope id: 55) (scope id: 55)
                                                      +-index capture 
                                                        +-use var 'array' (declared in scope: 42) (scope id: 42)
                                                        +-expr 
                                                          +-use var 'j' (declared in scope: 49) (scope id: 49)
                                                +-expr 
                                                  +-set 
                                                    +-index capture 
                                                      +-use var 'array' (declared in scope: 42) (scope id: 42)
                                                      +-expr 
                                                        +-use var 'j' (declared in scope: 49) (scope id: 49)
                                                    +-index capture 
                                                      +-use var 'array' (declared in scope: 42) (scope id: 42)
                                                      +-expr 
                                                        +-add 
                                                          +-use var 'j' (declared in scope: 49) (scope id: 49)
                                                          +-number const 
                                              +-expr 
                                                +-set 
                                                  +-index capture 
                                                    +-use var 'array' (declared in scope: 42) (scope id: 42)
                                                    +-expr 
                                                      +-add 
                                                        +-use var 'j' (declared in scope: 49) (scope id: 49)
                                                        +-number const 
                                                  +-use var 'temp' (declared in scope: 55) (scope id: 55)
        +-seq 
          +-seq 
            +-seq 
              +-seq 
                +-seq 
                  +-seq 
                    +-seq 
                      +-seq 
                        +-seq 
                          +-seq 
                            +-seq 
                              +-Import 
                                +-Import List
                                  +-Import List Element 'print'
                                  +-Import List
                                    +-Import List Element 'quickSort'
                                    +-Import List
                                      +-Import List Element 'printArray'
                                      +-Import List
                                        +-Import List Element 'bubbleSort'
                                +-Import File Path '"./sorts"'
                            +-expr 
                          +-Import 
                            +-Import List
                              +-Import List Element 'factorial'
                            +-Import File Path '"./factorial"'
                        +-expr 
                      +-expr 
                        +-set 
                          +-new const size (scope id: 1)
                          +-number const 
                    +-expr 
                      +-set 
                        +-new var 'array' (scope id: 1) (scope id: 1)
                          +-var type 'number[]'
                        +-initializer 
                          +-initializer list 
                            +-initializer list 
                              +-initializer list 
                                +-initializer list 
                                  +-initializer list 
                                    +-initializer list 
                                      +-initializer list 
                                        +-initializer list 
                                          +-initializer list 
                                            +-initializer list 
                                              +-initializer list 
                                                +-initializer list 
                                                  +-initializer list 
                                                    +-initializer list 
                                                      +-initializer list 
                                                        +-initializer list 
                                                          +-initializer list 
                                                            +-initializer list 
                                                              +-initializer list 
                                                                +-initializer list 
                                                                  +-number const 
                                                                +-number const 
                                                              +-number const 
                                                            +-number const 
                                                          +-number const 
                                                        +-number const 
                                                      +-number const 
                                                    +-number const 
                                                  +-number const 
                                                +-number const 
                                              +-number const 
                                            +-number const 
                                          +-number const 
                                        +-number const 
                                      +-number const 
                                    +-number const 
                                  +-number const 
                                +-number const 
                              +-number const 
                            +-number const 
                  +-expr 
                    +-function call 'printArray' 
                      +-function args 
                        +-use var 'size' (declared in scope: 1) (scope id: 1)
                        +-function args 
                          +-use var 'array' (declared in scope: 1) (scope id: 1)
                +-expr 
                  +-function call 'quickSort' 
                    +-function args 
                      +-number const 
                      +-function args 
                        +-use var 'array' (declared in scope: 1) (scope id: 1)
              +-expr 
                +-function call 'printArray' 
                  +-function args 
                    +-use var 'size' (declared in scope: 1) (scope id: 1)
                    +-function args 
                      +-use var 'array' (declared in scope: 1) (scope id: 1)
            +-expr 
              +-set 
                +-new var 'b' (scope id: 1) (scope id: 1)
                +-add 
                  +-use var 'size' (declared in scope: 1) (scope id: 1)
                  +-number const 
          +-expr 
            +-function call 'print' 
              +-function args 
                +-function call 'factorial' 
                  +-function args 
                    +-number const 


-- Started print variable table
{
   { Variable name: 'size', Type: 'number', Scope ID: 1 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 1 }
   { Variable name: 'b', Type: 'number', Scope ID: 1 }
   { Variable name: 'a', Type: 'number', Scope ID: 2 }
   { Variable name: 'n', Type: 'number', Scope ID: 7 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 10 }
   { Variable name: 'size', Type: 'number', Scope ID: 10 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 13 }
   { Variable name: 'first', Type: 'number', Scope ID: 13 }
   { Variable name: 'last', Type: 'number', Scope ID: 13 }
   { Variable name: 'left', Type: 'number', Scope ID: 18 }
   { Variable name: 'right', Type: 'number', Scope ID: 18 }
   { Variable name: 'middle', Type: 'number', Scope ID: 18 }
   { Variable name: 'tmp', Type: 'number', Scope ID: 31 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 32 }
   { Variable name: 'size', Type: 'number', Scope ID: 32 }
   { Variable name: 'i', Type: 'number', Scope ID: 35 }
   { Variable name: 'n', Type: 'string', Scope ID: 39 }
   { Variable name: 'array', Type: 'number[]', Scope ID: 42 }
   { Variable name: 'size', Type: 'number', Scope ID: 42 }
   { Variable name: 'i', Type: 'number', Scope ID: 45 }
   { Variable name: 'j', Type: 'number', Scope ID: 49 }
   { Variable name: 'temp', Type: 'number', Scope ID: 55 }
}
-- Started print function table
{
   Function name: 'factorial'. Return type: 'number'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'a', Type: 'number', Scope ID: 2 }
      }
   }

   Function name: 'print'. Return type: 'void'. Arguments:(number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'number', Scope ID: 7 }
      }
   }

   Function name: 'quickSort'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 10 }
         { Variable name: 'size', Type: 'number', Scope ID: 10 }
      }
   }

   Function name: 'quickSortHide'. Return type: 'void'. Arguments:(number[], number, number)
   {
      Local variables: (16 byte)
      {
         { Variable name: 'left', Type: 'number', Scope ID: 18 }
         { Variable name: 'right', Type: 'number', Scope ID: 18 }
         { Variable name: 'middle', Type: 'number', Scope ID: 18 }
         { Variable name: 'tmp', Type: 'number', Scope ID: 31 }
      }

      Argument variables: (12 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 13 }
         { Variable name: 'first', Type: 'number', Scope ID: 13 }
         { Variable name: 'last', Type: 'number', Scope ID: 13 }
      }
   }

   Function name: 'printArray'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (4 byte)
      {
         { Variable name: 'i', Type: 'number', Scope ID: 35 }
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 32 }
         { Variable name: 'size', Type: 'number', Scope ID: 32 }
      }
   }

   Function name: 'println'. Return type: 'void'. Arguments:(string)
   {
      Local variables: (0 byte)
      {
         void
      }

      Argument variables: (4 byte)
      {
         { Variable name: 'n', Type: 'string', Scope ID: 39 }
      }
   }

   Function name: 'bubbleSort'. Return type: 'void'. Arguments:(number[], number)
   {
      Local variables: (12 byte)
      {
         { Variable name: 'i', Type: 'number', Scope ID: 45 }
         { Variable name: 'j', Type: 'number', Scope ID: 49 }
         { Variable name: 'temp', Type: 'number', Scope ID: 55 }
      }

      Argument variables: (8 byte)
      {
         { Variable name: 'array', Type: 'number[]', Scope ID: 42 }
         { Variable name: 'size', Type: 'number', Scope ID: 42 }
      }
   }

}
-- Started print import variable table
{
   empty
}
-- Started print import functions table
{
   empty
}
-- Started preparation for code generation
-- Preparation for code generation done
-- Started code generation
-- Code generation done
